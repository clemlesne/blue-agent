{{- if and .Values.secret.create .Values.secret.azureKeyVault.enabled (.Capabilities.APIVersions.Has "secrets-store.csi.x-k8s.io/v1") -}}
# Secrets Store CSI Driver for Azure Key Vault, for pods
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ include "blue-agent.fullname" . }}-azure
  labels:
    {{- include "blue-agent.labels" . | nindent 4 }}
spec:
  provider: azure
  # Output schema
  secretObjects:
    - secretName: {{ include "blue-agent.secretName" . }}
      type: Opaque
      labels:
        {{- include "blue-agent.labels" . | nindent 8 }}
      data:
        - objectName: organization-url
          key: organizationURL
        - objectName: personal-access-token
          key: personalAccessToken
  # Source configuration
  parameters:
    clientID: {{ .Values.secret.azureKeyVault.managedIdentityId | quote | required "A value for .Values.secret.azureKeyVault.managedIdentityId is required" }}
    keyvaultName: {{ .Values.secret.azureKeyVault.name | quote | required "A value for .Values.secret.azureKeyVault.name is required" }}
    tenantID: {{ .Values.secret.azureKeyVault.tenantId | quote | required "A value for .Values.secret.azureKeyVault.tenantId is required" }}
    objects: |
      array:
        - |
          objectName: organization-url
          objectType: secret
        - |
          objectName: personal-access-token
          objectType: secret
{{- else if .Values.secret.create -}}
# Secret is backed natively by Kubernetes
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ include "blue-agent.secretName" . }}
  labels:
    {{- include "blue-agent.labels" . | nindent 4 }}
stringData:
  personalAccessToken: {{ .Values.pipelines.personalAccessToken | quote | required "A value for .Values.pipelines.personalAccessToken is required" }}
  organizationURL: {{ .Values.pipelines.organizationURL | quote | required "A value for .Values.pipelines.organizationURL is required" }}
{{- end }}
